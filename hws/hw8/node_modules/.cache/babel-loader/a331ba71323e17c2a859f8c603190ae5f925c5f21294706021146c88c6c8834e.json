{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oniko\\\\Desktop\\\\\\u0412\\u0441\\u0435 \\u0414\\u0417 GB\\\\ReactJS-main\\\\hw8app\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Создание контекста корзины\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// Создание компонента-провайдера корзины\nconst CartContextProvider = props => {\n  _s();\n  // Имитация бэкенда: содержание корзины загружается из localStorage, если оно было сохрано в localStorage\n  const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || []);\n\n  // Функция добавления товара в корзину по его id\n  const addToCart = productId => {\n    setCartItems(prevCartItems => {\n      // Проверка наличия товар с таким id в корзине\n      const existingItem = prevCartItems.find(item => item.id === productId);\n      if (existingItem) {\n        // Если товар уже есть в корзине, его количество увеличивается\n        return prevCartItems.map(item => item.id === productId ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        // Если товара не было в корзине, такой добавляется в корзину в количестве 1.\n        return [...prevCartItems, {\n          id: productId,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Функция удаления товара из корзины по его id\n  const removeFromCart = productId => {\n    setCartItems(prevCartItems => prevCartItems.filter(item => item.id !== productId));\n  };\n\n  // Функция изменения количества товаров в корзине\n  const updateCartItemQuantity = (productId, quantityChange) => {\n    setCartItems(cartItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: Math.max(1, quantityChange) // Минимум 1 единица товара в корзине\n    } : item));\n  };\n\n  // Очистка корзины\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Имитация бэкенда: сохранение состояния корзины в localStorage при каждом изменении\n  useEffect(() => {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      updateCartItemQuantity\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CartContextProvider, \"DoAq/i7Xy2YtE2MUqz5AexcA91U=\");\n_c = CartContextProvider;\nexport default CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartContextProvider","props","_s","cartItems","setCartItems","JSON","parse","localStorage","getItem","addToCart","productId","prevCartItems","existingItem","find","item","id","map","quantity","removeFromCart","filter","updateCartItemQuantity","quantityChange","Math","max","clearCart","setItem","stringify","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/oniko/Desktop/Все ДЗ GB/ReactJS-main/hw8app/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\n// Создание контекста корзины\nexport const CartContext = createContext();\n\n// Создание компонента-провайдера корзины\nconst CartContextProvider = (props) => {\n  // Имитация бэкенда: содержание корзины загружается из localStorage, если оно было сохрано в localStorage\n  const [cartItems, setCartItems] = useState(\n    JSON.parse(localStorage.getItem(\"cartItems\")) || []\n  );\n\n  // Функция добавления товара в корзину по его id\n  const addToCart = (productId) => {\n    setCartItems((prevCartItems) => {\n      // Проверка наличия товар с таким id в корзине\n      const existingItem = prevCartItems.find((item) => item.id === productId);\n      if (existingItem) {\n        // Если товар уже есть в корзине, его количество увеличивается\n        return prevCartItems.map((item) =>\n          item.id === productId\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      } else {\n        // Если товара не было в корзине, такой добавляется в корзину в количестве 1.\n        return [...prevCartItems, { id: productId, quantity: 1 }];\n      }\n    });\n  };\n\n  // Функция удаления товара из корзины по его id\n  const removeFromCart = (productId) => {\n    setCartItems((prevCartItems) =>\n      prevCartItems.filter((item) => item.id !== productId)\n    );\n  };\n\n  // Функция изменения количества товаров в корзине\n  const updateCartItemQuantity = (productId, quantityChange) => {\n    setCartItems(\n      cartItems.map((item) =>\n        item.id === productId\n          ? {\n              ...item,\n              quantity: Math.max(1, quantityChange), // Минимум 1 единица товара в корзине\n            }\n          : item\n      )\n    );\n  };\n\n  // Очистка корзины\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Имитация бэкенда: сохранение состояния корзины в localStorage при каждом изменении\n  useEffect(() => {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        addToCart,\n        removeFromCart,\n        clearCart,\n        updateCartItemQuantity,\n      }}\n    >\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,MAAMM,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CACxCU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EACnD,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,SAAS,IAAK;IAC/BN,YAAY,CAAEO,aAAa,IAAK;MAC9B;MACA,MAAMC,YAAY,GAAGD,aAAa,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,SAAS,CAAC;MACxE,IAAIE,YAAY,EAAE;QAChB;QACA,OAAOD,aAAa,CAACK,GAAG,CAAEF,IAAI,IAC5BA,IAAI,CAACC,EAAE,KAAKL,SAAS,GACjB;UAAE,GAAGI,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GACxCH,IACN,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGH,aAAa,EAAE;UAAEI,EAAE,EAAEL,SAAS;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIR,SAAS,IAAK;IACpCN,YAAY,CAAEO,aAAa,IACzBA,aAAa,CAACQ,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,SAAS,CACtD,CAAC;EACH,CAAC;;EAED;EACA,MAAMU,sBAAsB,GAAGA,CAACV,SAAS,EAAEW,cAAc,KAAK;IAC5DjB,YAAY,CACVD,SAAS,CAACa,GAAG,CAAEF,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKL,SAAS,GACjB;MACE,GAAGI,IAAI;MACPG,QAAQ,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,cAAc,CAAC,CAAE;IACzC,CAAC,GACDP,IACN,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBpB,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACdW,YAAY,CAACkB,OAAO,CAAC,WAAW,EAAEpB,IAAI,CAACqB,SAAS,CAACvB,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IACnBC,KAAK,EAAE;MACLzB,SAAS;MACTM,SAAS;MACTS,cAAc;MACdM,SAAS;MACTJ;IACF,CAAE;IAAAS,QAAA,EAED5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CArEIF,mBAAmB;AAAAkC,EAAA,GAAnBlC,mBAAmB;AAuEzB,eAAeA,mBAAmB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}